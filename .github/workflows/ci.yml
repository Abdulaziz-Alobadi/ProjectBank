name: Codacy Analysis and Coverage

on:
  pull_request:
    branches:
      - main
      - releases/**
  push:
    branches:
      - main
      - releases/**

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: npm

      - run: npm ci
      - name: Prettier Format Check
        run: npm run format-check
      - name: ESLint Check
        run: npm run lint
      - name: Build & Test
        run: npm run test

  # Codacy Analysis
  codacy-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@v4.4.0
        with:
          verbose: true
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          format: json
          output: codacy-analysis-results.json
          directory: ./ # Directory to analyze
          upload: true
          max-allowed-issues: 100
          tool-timeout: 15minutes

      - name: Upload Codacy Coverage Report
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: "coverage/lcov-report/index.html"
          language: "javascript"
          force-coverage-parser: "lcov"

  # Git Version Calculation
  git-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Git Version
        uses: codacy/git-version@2.4.0
        with:
          release-branch: main
          dev-branch: dev
          prefix: v
          log-paths: ./src # Change this to your source folder or use default

  # CodeQL Analysis
  codeql-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [c-cpp, csharp, java-kotlin]
        build-mode: [manual, autobuild, none] # Different build modes for each language
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - if: ${{ matrix.build-mode == 'manual' }}
        name: Build C and C++ code
        run: |
          echo 'If you are using a "manual" build mode for one or more of the' \
            'languages you are analyzing, replace this with the commands to build' \
            'your code, for example:'
          echo '  make bootstrap'
          echo '  make release'
          exit 1

      # Finalize the CodeQL analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: sarif
